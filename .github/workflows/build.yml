name: Build and Release
on:
  push:
    tags:
      - 'v*'

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libclang-dev
        
    - name: Install Python dependencies
      run: pip install maturin
        
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        
    - name: Build wheel
      run: maturin build --release
      
    - name: Upload wheels as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ runner.os }}
        path: target/wheels/*.whl

  create-release:
    needs: build-wheels
    runs-on: ubuntu-latest
    steps:
    - name: Download all wheel artifacts
      uses: actions/download-artifact@v4
      with:
        path: wheels/
        
    - name: Move wheels to single directory
      run: |
        mkdir -p all-wheels
        find wheels/ -name "*.whl" -exec cp {} all-wheels/ \;
        ls -la all-wheels/
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: all-wheels/*.whl
        generate_release_notes: true
        body: |
          ## –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:
          - üêß Linux x86_64
          - üçé macOS (Intel –∏ Apple Silicon)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}